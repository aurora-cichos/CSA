#BlueJ class context
comment0.target=SimplePicture
comment0.text=\n\ A\ class\ that\ represents\ a\ simple\ picture.\ \ A\ simple\ picture\ may\ have\n\ an\ associated\ file\ name\ and\ a\ title.\ \ A\ simple\ picture\ has\ pixels,\ \n\ width,\ and\ height.\ \ A\ simple\ picture\ uses\ a\ BufferedImage\ to\ \n\ hold\ the\ pixels.\ \ You\ can\ show\ a\ simple\ picture\ in\ a\ \n\ PictureFrame\ (a\ JFrame).\n\ \n\ Copyright\ Georgia\ Institute\ of\ Technology\ 2004\n\ @author\ Barb\ Ericson\ ericson@cc.gatech.edu\n
comment1.params=
comment1.target=SimplePicture()
comment1.text=\n\ A\ Constructor\ that\ takes\ no\ arguments.\ \ All\ fields\ will\ be\ null.\n\ A\ no-argument\ constructor\ must\ be\ given\ in\ order\ for\ a\ class\ to\n\ be\ able\ to\ be\ subclassed.\ \ By\ default\ all\ subclasses\ will\ implicitly\n\ call\ this\ in\ their\ parent's\ no\ argument\ constructor\ unless\ a\ \n\ different\ call\ to\ super()\ is\ explicitly\ made\ as\ the\ first\ line\ \n\ of\ code\ in\ a\ constructor.\n
comment10.params=
comment10.target=java.awt.Graphics\ getGraphics()
comment10.text=\n\ Method\ to\ get\ a\ graphics\ object\ for\ this\ picture\ to\ use\ to\ draw\ on\n\ @return\ a\ graphics\ object\ to\ use\ for\ drawing\n
comment11.params=
comment11.target=java.awt.Graphics2D\ createGraphics()
comment11.text=\n\ Method\ to\ get\ a\ Graphics2D\ object\ for\ this\ picture\ which\ can\n\ be\ used\ to\ do\ 2D\ drawing\ on\ the\ picture\n
comment12.params=
comment12.target=java.lang.String\ getFileName()
comment12.text=\n\ Method\ to\ get\ the\ file\ name\ associated\ with\ the\ picture\n\ @return\ \ the\ file\ name\ associated\ with\ the\ picture\n
comment13.params=name
comment13.target=void\ setFileName(java.lang.String)
comment13.text=\n\ Method\ to\ set\ the\ file\ name\n\ @param\ name\ the\ full\ pathname\ of\ the\ file\n
comment14.params=
comment14.target=java.lang.String\ getTitle()
comment14.text=\n\ Method\ to\ get\ the\ title\ of\ the\ picture\n\ @return\ the\ title\ of\ the\ picture\n
comment15.params=title
comment15.target=void\ setTitle(java.lang.String)
comment15.text=\n\ Method\ to\ set\ the\ title\ for\ the\ picture\n\ @param\ title\ the\ title\ to\ use\ for\ the\ picture\n
comment16.params=
comment16.target=int\ getWidth()
comment16.text=\n\ Method\ to\ get\ the\ width\ of\ the\ picture\ in\ pixels\n\ @return\ the\ width\ of\ the\ picture\ in\ pixels\n
comment17.params=
comment17.target=int\ getHeight()
comment17.text=\n\ Method\ to\ get\ the\ height\ of\ the\ picture\ in\ pixels\n\ @return\ \ the\ height\ of\ the\ picture\ in\ pixels\n
comment18.params=
comment18.target=PictureFrame\ getPictureFrame()
comment18.text=\n\ Method\ to\ get\ the\ picture\ frame\ for\ the\ picture\n\ @return\ the\ picture\ frame\ associated\ with\ this\ picture\n\ (it\ may\ be\ null)\n
comment19.params=pictureFrame
comment19.target=void\ setPictureFrame(PictureFrame)
comment19.text=\n\ Method\ to\ set\ the\ picture\ frame\ for\ this\ picture\n\ @param\ pictureFrame\ the\ picture\ frame\ to\ use\ \n
comment2.params=width\ height
comment2.target=SimplePicture(int,\ int)
comment2.text=\n\ public\ SimplePicture(String\ fileName)\n\ {\n\ \ \ \n\ \ \ //\ load\ the\ picture\ into\ the\ buffered\ image\ \n\ \ \ load(fileName);\n\ \ \ \n\ }\n\ \n\ /**\n\ A\ constructor\ that\ takes\ the\ width\ and\ height\ desired\ for\ a\ picture\ and\n\ creates\ a\ buffered\ image\ of\ that\ size.\ \ This\ constructor\ doesn't\ \n\ show\ the\ picture.\n\ @param\ width\ the\ desired\ width\n\ @param\ height\ the\ desired\ height\n
comment20.params=
comment20.target=java.awt.Image\ getImage()
comment20.text=\n\ Method\ to\ get\ an\ image\ from\ the\ picture\n\ @return\ \ the\ buffered\ image\ since\ it\ is\ an\ image\n
comment21.params=x\ y
comment21.target=int\ getBasicPixel(int,\ int)
comment21.text=\n\ Method\ to\ return\ the\ pixel\ value\ as\ an\ int\ for\ the\ given\ x\ and\ y\ location\n\ @param\ x\ the\ x\ coordinate\ of\ the\ pixel\n\ @param\ y\ the\ y\ coordinate\ of\ the\ pixel\n\ @return\ the\ pixel\ value\ as\ an\ integer\ (alpha,\ red,\ green,\ blue)\n
comment22.params=x\ y\ rgb
comment22.target=void\ setBasicPixel(int,\ int,\ int)
comment22.text=\ \n\ Method\ to\ set\ the\ value\ of\ a\ pixel\ in\ the\ picture\ from\ an\ int\n\ @param\ x\ the\ x\ coordinate\ of\ the\ pixel\n\ @param\ y\ the\ y\ coordinate\ of\ the\ pixel\n\ @param\ rgb\ the\ new\ rgb\ value\ of\ the\ pixel\ (alpha,\ red,\ green,\ blue)\n
comment23.params=x\ y
comment23.target=Pixel\ getPixel(int,\ int)
comment23.text=\n\ Method\ to\ get\ a\ pixel\ object\ for\ the\ given\ x\ and\ y\ location\n\ @param\ x\ \ the\ x\ location\ of\ the\ pixel\ in\ the\ picture\n\ @param\ y\ \ the\ y\ location\ of\ the\ pixel\ in\ the\ picture\n\ @return\ a\ Pixel\ object\ for\ this\ location\n
comment24.params=
comment24.target=Pixel[]\ getPixels()
comment24.text=\n\ Method\ to\ get\ a\ one-dimensional\ array\ of\ Pixels\ for\ this\ simple\ picture\n\ @return\ a\ one-dimensional\ array\ of\ Pixel\ objects\ starting\ with\ y\=0\n\ to\ y\=height-1\ and\ x\=0\ to\ x\=width-1.\n
comment25.params=image
comment25.target=void\ load(java.awt.Image)
comment25.text=\n\ Method\ to\ load\ the\ buffered\ image\ with\ the\ passed\ image\n\ @param\ image\ \ the\ image\ to\ use\n
comment26.params=
comment26.target=void\ show()
comment26.text=\n\ Method\ to\ show\ the\ picture\ in\ a\ picture\ frame\n
comment27.params=
comment27.target=void\ hide()
comment27.text=\n\ Method\ to\ hide\ the\ picture\n
comment28.params=flag
comment28.target=void\ setVisible(boolean)
comment28.text=\n\ Method\ to\ make\ this\ picture\ visible\ or\ not\n\ @param\ flag\ true\ if\ you\ want\ it\ visible\ else\ false\n
comment29.params=
comment29.target=void\ repaint()
comment29.text=\n\ public\ void\ explore()\n\ {\n\ \ \ //\ create\ a\ copy\ of\ the\ current\ picture\ and\ explore\ it\n\ \ \ new\ PictureExplorer(new\ SimplePicture(this));\n\ }\n\ \n\ /**\n\ Method\ to\ force\ the\ picture\ to\ redraw\ itself.\ \ This\ is\ very\n\ useful\ after\ you\ have\ changed\ the\ pixels\ in\ a\ picture.\n
comment3.params=width\ height\ theColor
comment3.target=SimplePicture(int,\ int,\ java.awt.Color)
comment3.text=\n\ A\ constructor\ that\ takes\ the\ width\ and\ height\ desired\ for\ a\ picture\ and\n\ creates\ a\ buffered\ image\ of\ that\ size.\ \ It\ also\ takes\ the\n\ color\ to\ use\ for\ the\ background\ of\ the\ picture.\n\ @param\ width\ the\ desired\ width\n\ @param\ height\ the\ desired\ height\n\ @param\ theColor\ the\ background\ color\ for\ the\ picture\n
comment30.params=message\ xPos\ yPos
comment30.target=void\ addMessage(java.lang.String,\ int,\ int)
comment30.text=\n\ public\ boolean\ loadImage(String\ fileName)\n\ {\n\ \ \ \ \ return\ load(fileName);\n}\n\ \n\ /**\n\ Method\ to\ draw\ a\ message\ as\ a\ string\ on\ the\ buffered\ image\ \n\ @param\ message\ the\ message\ to\ draw\ on\ the\ buffered\ image\n\ @param\ xPos\ \ the\ leftmost\ point\ of\ the\ string\ in\ x\ \n\ @param\ yPos\ \ the\ bottom\ of\ the\ string\ in\ y\n
comment31.params=text\ xPos\ yPos
comment31.target=void\ drawString(java.lang.String,\ int,\ int)
comment31.text=\n\ Method\ to\ draw\ a\ string\ at\ the\ given\ location\ on\ the\ picture\n\ @param\ text\ the\ text\ to\ draw\n\ @param\ xPos\ the\ left\ x\ for\ the\ text\ \n\ @param\ yPos\ the\ top\ y\ for\ the\ text\n
comment32.params=xFactor\ yFactor
comment32.target=Picture\ scale(double,\ double)
comment32.text=\n\ Method\ to\ create\ a\ new\ picture\ by\ scaling\ the\ current\n\ picture\ by\ the\ given\ x\ and\ y\ factors\n\ @param\ xFactor\ the\ amount\ to\ scale\ in\ x\n\ @param\ yFactor\ the\ amount\ to\ scale\ in\ y\n\ @return\ the\ resulting\ picture\n
comment33.params=width
comment33.target=Picture\ getPictureWithWidth(int)
comment33.text=\n\ Method\ to\ create\ a\ new\ picture\ of\ the\ passed\ width.\ \n\ The\ aspect\ ratio\ of\ the\ width\ and\ height\ will\ stay\n\ the\ same.\n\ @param\ width\ the\ desired\ width\n\ @return\ the\ resulting\ picture\n
comment34.params=height
comment34.target=Picture\ getPictureWithHeight(int)
comment34.text=\n\ Method\ to\ create\ a\ new\ picture\ of\ the\ passed\ height.\ \n\ The\ aspect\ ratio\ of\ the\ width\ and\ height\ will\ stay\n\ the\ same.\n\ @param\ height\ the\ desired\ height\n\ @return\ the\ resulting\ picture\n
comment35.params=trans
comment35.target=java.awt.geom.Rectangle2D\ getTransformEnclosingRect(java.awt.geom.AffineTransform)
comment35.text=\n\ Method\ to\ get\ the\ coordinates\ of\ the\ enclosing\ rectangle\ after\ this\n\ transformation\ is\ applied\ to\ the\ current\ picture\n\ @return\ the\ enclosing\ rectangle\n
comment36.params=trans
comment36.target=java.awt.geom.Rectangle2D\ getTranslationEnclosingRect(java.awt.geom.AffineTransform)
comment36.text=\n\ Method\ to\ get\ the\ coordinates\ of\ the\ enclosing\ rectangle\ after\ this\n\ transformation\ is\ applied\ to\ the\ current\ picture\n\ @return\ the\ enclosing\ rectangle\n
comment37.params=
comment37.target=java.lang.String\ toString()
comment37.text=\n\ Method\ to\ return\ a\ string\ with\ information\ about\ this\ picture\n\ @return\ a\ string\ with\ information\ about\ the\ picture\ \n
comment4.params=copyPicture
comment4.target=SimplePicture(SimplePicture)
comment4.text=\n\ A\ Constructor\ that\ takes\ a\ picture\ to\ copy\ information\ from\n\ @param\ copyPicture\ the\ picture\ to\ copy\ from\n
comment5.params=image
comment5.target=SimplePicture(java.awt.image.BufferedImage)
comment5.text=\n\ A\ constructor\ that\ takes\ a\ buffered\ image\n\ @param\ image\ the\ buffered\ image\n
comment6.params=
comment6.target=java.lang.String\ getExtension()
comment6.text=\n\ Method\ to\ get\ the\ extension\ for\ this\ picture\n\ @return\ the\ extendsion\ (jpg\ or\ bmp)\n
comment7.params=sourcePicture
comment7.target=void\ copyPicture(SimplePicture)
comment7.text=\n\ Method\ that\ will\ copy\ all\ of\ the\ passed\ source\ picture\ into\n\ the\ current\ picture\ object\ \n\ @param\ sourcePicture\ \ the\ picture\ object\ to\ copy\n
comment8.params=color
comment8.target=void\ setAllPixelsToAColor(java.awt.Color)
comment8.text=\n\ Method\ to\ set\ the\ color\ in\ the\ picture\ to\ the\ passed\ color\n\ @param\ color\ the\ color\ to\ set\ to\n
comment9.params=
comment9.target=java.awt.image.BufferedImage\ getBufferedImage()
comment9.text=\n\ Method\ to\ get\ the\ buffered\ image\n\ @return\ the\ buffered\ image\ \n
numComments=38
